# Copyright Bunting Labs, Inc. 2025
services:
  app:
    container_name: mundi-app
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - VITE_WEBSITE_DOMAIN=http://localhost:8000
        - VITE_EMAIL_VERIFICATION=disable
    ports:
      - "8000:8000"
      - "5173:8000"
    depends_on:
      minio:
        condition: service_healthy
      mc:
        condition: service_completed_successfully
      postgresdb:
        condition: service_healthy
      driftdb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - MUNDI_AUTH_MODE=edit # "edit" or "view_only"
      - S3_ACCESS_KEY_ID=s3user
      - S3_SECRET_ACCESS_KEY=backup123
      - S3_DEFAULT_REGION=us-east-1
      - S3_ENDPOINT_URL=http://minio:9000
      - S3_BUCKET=test-bucket
      - WEBSITE_DOMAIN=http://localhost:8000
      - DRIFTDB_SERVER_URL=http://driftdb:8080
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=postgresdb
      - POSTGRES_PORT=5432
      - POSTGRES_DB=mundidb
      - POSTGRES_USER=mundiuser
      - POSTGRES_PASSWORD=gdalpassword
      - PYTHONUNBUFFERED=1
      - PYTHONIOENCODING=utf-8
      - OPENAI_BASE_URL=http://host.docker.internal:11434/v1
      - OPENAI_API_KEY=ollama
      - OPENAI_MODEL=orieg/gemma3-tools:1b
    command: uvicorn src.wsgi:app --host 0.0.0.0 --port 8000 --log-level debug --access-log --use-colors
    volumes:
      - ./src:/app/src
      - ./alembic:/app/alembic
      - ./Eno:/app/Eno
      - ./frontendts:/app/frontendts

  minio:
    image: bitnami/minio:latest
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DEFAULT_BUCKETS=test-bucket
    volumes:
      - ./data/minio:/data
    # No need for network aliases
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 2s
      retries: 2

  mc:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 admin password;
      /usr/bin/mc admin user add myminio s3user backup123;
      /usr/bin/mc admin policy attach myminio readwrite --user s3user ||
      (sleep 3 && /usr/bin/mc admin policy attach myminio readwrite --user s3user);
      echo 'S3 user setup complete!';
      "

  postgresdb:
    image: postgres:15
    environment:
      - POSTGRES_DB=mundidb
      - POSTGRES_USER=mundiuser
      - POSTGRES_PASSWORD=gdalpassword
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mundiuser -d mundidb"]
      interval: 5s
      timeout: 5s
      retries: 5

  driftdb:
    platform: linux/amd64
    image: ${DRIFTDB_IMAGE:-driftdb-local}
    build:
      context: ./driftdb
      dockerfile: driftdb-server/Dockerfile
    environment:
      # - USE_HTTPS_WSS=1
      - HOSTNAME_OVERRIDE=localhost:5173
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "cat /proc/net/tcp | grep '1F90' || exit 0"]
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 3s

  redis:
    image: redis:alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 5
